function [result, original] = fun(input_vector);
original = result = [];
min = -5;
max = 5;
for i = input_vector;
noise = min .+ (max .- min) .* rand;
output = i + 1;
output_noise = output + noise;
result(end + 1) = output_noise;
original(end + 1) = output;
end;
end;
function weights = regression(rbf_start, rbf_end, how_many, width, input, output);
x_matrix = [];
for i = input;
rbf_vector = rbfy(rbf_start, rbf_end, how_many, width, i);
x_matrix = [x_matrix; rbf_vector];
end;
weights = x_matrix \ output;
end;

function rbf_vector = rbfy(rbf_start, rbf_end, how_many, width, input_value);
rbf_vector = [];
for i = linspace(rbf_start, rbf_end, how_many);
basis_function = exp(-((input .- i) .^ 2) ./ (2 .* (width .^ 2)));
rbf_vector(end + 1) = basis_function;
end;
rbf_vector(end + 1) = 1;
end;
